# Base URL for the Next.js application
# This is used for generating absolute URLs and API calls within the app
# Set this to your deployed app url
NEXT_PUBLIC_BASE_URL="http://localhost:3000"

# =============================================================================
# Gradient API Configuration
# =============================================================================
# Gradient is DigitalOcean's AI platform for running LLMs
# How to create Gradient Model Access keys: https://docs.digitalocean.com/products/gradientai-platform/how-to/use-serverless-inference/#create
GRADIENT_API_KEY=your_gradient_api_key_here

# Gradient inference endpoint - typically doesn't need to be changed
GRADIENT_BASE_URL="https://inference.do-ai.run/v1"

# =============================================================================
# DigitalOcean Spaces Configuration (S3-compatible object storage)
# =============================================================================
# Used for uploading and storing images, PDFs, and other media files from the chat
# How to create a Spaces Bucket: https://docs.digitalocean.com/products/spaces/how-to/create/

# Spaces endpoint URL - change the region code if your Space is in a different region
# Available regions: nyc3, ams3, sfo3, sgp1, fra1, syd1
DO_SPACES_ENDPOINT=https://nyc3.digitaloceanspaces.com

# Region where your Space is located
DO_SPACES_REGION=nyc3

# Spaces access credentials - generate these in the API section of your DigitalOcean dashboard
# https://cloud.digitalocean.com/account/api/spaces
DO_SPACES_ACCESS_KEY=your_spaces_access_key_here
DO_SPACES_SECRET_KEY=your_spaces_secret_key_here

# Name of your Space (must be globally unique)
DO_SPACES_BUCKET=your_bucket_name_here

# =============================================================================
# Playwright MCP Server Configuration
# =============================================================================
# The Playwright MCP server enables browser automation capabilities in the chat
# It consists of two components:
# 1. playwright-server: Controls the headless browser
# 2. playwright-mcp: Provides the MCP protocol interface

# -----------------------------------------------------------------------------
# PRODUCTION: When deploying to DigitalOcean App Platform
# -----------------------------------------------------------------------------
# Option 1: External access (through the public internet)
# Use this when components need to be accessed from outside the app
# PLAYWRIGHT_SERVER_ENDPOINT=https://my-app-name.ondigitalocean.app/playwright-server
# PLAYWRIGHT_MCP_ENDPOINT=https://my-app-name.ondigitalocean.app/playwright-mcp/mcp

# Option 2: Internal access (within your app's private network)
# Use this for better performance and security - components communicate internally
# PLAYWRIGHT_SERVER_ENDPOINT=http://playwright-server:8081
# PLAYWRIGHT_MCP_ENDPOINT=http://playwright-mcp:8080/mcp

# -----------------------------------------------------------------------------
# DEVELOPMENT: Local development configuration
# -----------------------------------------------------------------------------
# Default ports for running the services locally
# Make sure to start both services before running the main app:
# - playwright-server runs on port 8081
# - playwright-mcp runs on port 8080
PLAYWRIGHT_SERVER_ENDPOINT=http://localhost:8081
PLAYWRIGHT_MCP_ENDPOINT=http://localhost:8080/mcp
